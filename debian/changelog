ros-hydro-ecto-pcl (0.4.2-0precise) precise; urgency=high

  * Use the new header with PCL 1.7.0+
  * Always find pcl_conversions
    Should be okay since it's a package dependency.
  * Find pcl_conversions if building against PCL 1.7.0+
    It gets included depending on the PCL version in src/ros/pcl_bridge.cpp
  * fix sample with newer API
  * Contributors: Vincent Rabaud, pgorczak

 -- Vincent Rabaud <vincent.rabaud@gmail.com>  Sat, 20 Dec 2014 23:00:00 -0000

ros-hydro-ecto-pcl (0.4.1-0precise) precise; urgency=high

  * Merge pull request #34 <https://github.com/plasmodic/ecto_pcl/issues/34> from v4hn/pass-through-indices
    Add PassThrough for index extraction
  * Merge pull request #33 <https://github.com/plasmodic/ecto_pcl/issues/33> from v4hn/euclidean-cluster-extraction-indices
    Allow EuclideanClusterExtraction to work on input indices
  * Add PassThrough for index extraction
    This module behaves similarly to PassThrough with two changes:
    - It also accepts an optional set of input indices of the input cloud
    It's probably not good to add this to PassThrough as well, because it breaks whatever[:] >> passthrough[:]
    - It produces PointIndices of the original cloud instead of a new cloud
  * Allow EuclideanClusterExtraction to work on input indices
    This allows for a pipeline which outputs Clusters as sets of indices
    of the _original_ (organized) input cloud from the depth image camera.
    That way 2d bounding boxes in the input image can be more efficiently computed.
  * Merge pull request #32 <https://github.com/plasmodic/ecto_pcl/issues/32> from v4hn/pcl-cell-return-values
    pcl_cell: don't ignore the return value of the wrapped cell
  * pcl_cell: don't ignore the return value of the wrapped cell
    This makes sure ecto actually stops processing in case on of the cells
    produces an error and returns something else than ecto::OK.
  * Merge pull request #31 <https://github.com/plasmodic/ecto_pcl/issues/31> from v4hn/convex-hull-explicit-dimensionality
    ConvexHull: add parameter to explicitly set dimensionality of the data/hull
  * ConvexHull: add parameter to explicitly set dimensionality of the data/hull
    I had qhull 2012 via pcl 1.7.2 complaining over here that the input is,
    indeed, _not_ three dimensional when computing the hull of a detected table.
    Turned out pcl is always told to reconstruct a 3d-hull.
  * Contributors: Michael GÃ¶rner, Vincent Rabaud, v4hn

 -- Vincent Rabaud <vincent.rabaud@gmail.com>  Tue, 14 Oct 2014 22:00:00 -0000

ros-hydro-ecto-pcl (0.4.0-0precise) precise; urgency=high

  * depend on pcl_conversions which is lighter
  * drop Fuerte support
  * Contributors: Vincent Rabaud

 -- Vincent Rabaud <vincent.rabaud@gmail.com>  Thu, 03 Apr 2014 22:00:00 -0000

ros-hydro-ecto-pcl (0.3.14-0precise) precise; urgency=high

  * fix dependencies with PCL

 -- Vincent Rabaud <vincent.rabaud@gmail.com>  Wed, 28 Aug 2013 20:12:21 +0200


